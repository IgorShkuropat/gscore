/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/payments/buy": {
    post: operations["PaymentsController_buySubscribe"];
  };
  "/api/subscribe/self": {
    get: operations["SubscribeController_getSelfSubscribe"];
  };
  "/api/subscribe/change-product": {
    post: operations["SubscribeController_changeSubscribeProduct"];
  };
  "/api/code/activate": {
    post: operations["LicenseCodeController_activateCode"];
  };
  "/api/code/self": {
    get: operations["LicenseCodeController_getSelfLicencesCodes"];
  };
  "/api/code/manage": {
    put: operations["LicenseCodeController_manageLicenseCodes"];
  };
  "/api/code/health": {
    post: operations["LicenseCodeController_getLicenseCodeHealth"];
  };
  "/api/products": {
    get: operations["ProductsController_getProducts"];
  };
  "/api/users/sign-in": {
    post: operations["UsersController_signIn"];
  };
  "/api/users/sign-up": {
    post: operations["UsersController_signUp"];
  };
  "/api/users": {
    patch: operations["UsersController_updatePersonalData"];
  };
  "/api/users/update-password": {
    patch: operations["UsersController_updatePassword"];
  };
  "/api/users/me": {
    get: operations["UsersController_getMe"];
  };
}

export interface components {
  schemas: {
    BuySubscribeDto: {
      priceId: number;
    };
    Subscribe: {
      id: number;
      userId: number;
      currentPeriodStart: number | null;
      currentPeriodEnd: number | null;
    };
    BuySubscribeResponseDto: {
      subscribe: components["schemas"]["Subscribe"];
    };
    Product: { [key: string]: unknown };
    PriceResponseDto: {
      id: number;
      isActive: boolean;
      productId: number;
      product: components["schemas"]["Product"] | null;
      /** @example 100.00 */
      price: string;
    };
    ProductResponseDto: {
      id: number;
      sitesCount: number;
      name: number;
      prices: components["schemas"]["PriceResponseDto"][] | null;
    };
    SubscribeResponseDto: {
      id: number;
      userId: number;
      user: components["schemas"]["UserResponseDto"] | null;
      productId: number;
      product: components["schemas"]["ProductResponseDto"] | null;
      currentPeriodStart: string | null;
      currentPeriodEnd: string | null;
      /** @enum {string} */
      status: "ACTIVE" | "UNPAID" | "CANCELED";
      codes: components["schemas"]["LicenceCodeResponseDto"][] | null;
    };
    LicenceCodeResponseDto: {
      id: number;
      code: string;
      origin: string;
      /** @enum {string} */
      status: "ACTIVE" | "INACTIVE" | "HOLD";
      subscribeId: number;
      subscribe: components["schemas"]["SubscribeResponseDto"] | null;
      userId: number;
      user: components["schemas"]["UserResponseDto"] | null;
    };
    UserResponseDto: {
      id: number;
      /** @example examples@example.com */
      email: string;
      /** @example username */
      username: string;
      subscribes: unknown[][] | null;
      codes: components["schemas"]["LicenceCodeResponseDto"][] | null;
    };
    ChangeSubscribeProductDto: {
      productId: number;
      subscribeId: number;
    };
    LicenceCodeHasBeenActivatedError: {
      /** @example 409 */
      statusCode: number;
      /** @example Code has already been activated */
      message: string;
      /** @example Conflict */
      error: string;
    };
    LicenceCodeIsHoldError: {
      /** @example 409 */
      statusCode: number;
      /** @example Hold code cannot be activated */
      message: string;
      /** @example Conflict */
      error: string;
    };
    NumberOfAvailableCodesErrorDto: {
      /** @example 400 */
      statusCode: number;
      /** @example Number of available codes 3 */
      message: string;
      /** @example Bad Request */
      error: string;
    };
    SubscribeNotFoundErrorDto: {
      /** @example 404 */
      statusCode: number;
      /** @example Subscribe not found */
      message: string;
      /** @example Not Found */
      error: string;
    };
    NotAllCodesApplyForSubscribeErrorDto: {
      /** @example 409 */
      statusCode: number;
      /** @example Not all codes apply to this subscription */
      message: string;
      /** @example Conflict */
      error: string;
    };
    ManageLicenseCodesErrorDto: {
      /** @example 409 */
      statusCode: number;
      /** @example Failed manage license codes */
      message: string;
      /** @example Conflict */
      error: string;
    };
    NotFoundLicenseCode: {
      /** @example 404 */
      statusCode: number;
      /** @example Not found license code */
      message: string;
      /** @example Not Found */
      error: string;
    };
    ActivateLicenseCodeBodyDto: {
      code: string;
    };
    User: { [key: string]: unknown };
    LicenseCode: {
      id: number;
      code: string;
      origin: string;
      /** @enum {string} */
      status: "ACTIVE" | "INACTIVE" | "HOLD";
      subscribeId: number;
      subscribe: components["schemas"]["Subscribe"] | null;
      userId: number;
      user: components["schemas"]["User"] | null;
    };
    ManageLicenseCodesDto: {
      /**
       * @example [
       *   1,
       *   2,
       *   3
       * ]
       */
      codesIds: number[];
      subscribeId: number;
    };
    CodeHealthDto: {
      code: string;
      origin: string;
      /** @enum {string} */
      status: "ACTIVE" | "INACTIVE" | "HOLD";
      currentPeriodStart: number | null;
      currentPeriodEnd: number | null;
    };
    SignInDto: {
      /** @example example@example.com */
      email: string;
      password: string;
    };
    AuthResponseDto: {
      token: string;
      user: components["schemas"]["UserResponseDto"];
    };
    SignUpDto: {
      /** @example example@example.com */
      email: string;
      /** @example Username */
      username: string;
      /** @example qwerty */
      password: string;
    };
    SignUpResponseDto: {
      email: string;
      username: string;
      token: string;
    };
    ChangePersonalDataDto: {
      /** @example example@example.com */
      email: string;
      /** @example Username */
      username: string;
    };
    UpdatePasswordDto: {
      currentPassword: string;
      newPassword: string;
    };
  };
}

export interface operations {
  PaymentsController_buySubscribe: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["BuySubscribeResponseDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["BuySubscribeDto"];
      };
    };
  };
  SubscribeController_getSelfSubscribe: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["SubscribeResponseDto"][];
        };
      };
    };
  };
  SubscribeController_changeSubscribeProduct: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["SubscribeResponseDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChangeSubscribeProductDto"];
      };
    };
  };
  LicenseCodeController_activateCode: {
    parameters: {
      header: {
        Origin?: string;
      };
    };
    responses: {
      /** If license code has already been activated or hold */
      409: {
        content: {
          "application/json":
            | components["schemas"]["LicenceCodeHasBeenActivatedError"]
            | components["schemas"]["LicenceCodeIsHoldError"];
        };
      };
      default: {
        content: {
          "application/json": components["schemas"]["LicenseCode"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActivateLicenseCodeBodyDto"];
      };
    };
  };
  LicenseCodeController_getSelfLicencesCodes: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["LicenseCode"][];
        };
      };
    };
  };
  LicenseCodeController_manageLicenseCodes: {
    parameters: {};
    responses: {
      /** The number of specified codes does not match the available number */
      400: {
        content: {
          "application/json": components["schemas"]["NumberOfAvailableCodesErrorDto"];
        };
      };
      /** If subscribe not found */
      404: {
        content: {
          "application/json": components["schemas"]["SubscribeNotFoundErrorDto"];
        };
      };
      /** If not all codes apply to this subscription or Something went wrong with code management */
      409: {
        content: {
          "application/json":
            | components["schemas"]["NotAllCodesApplyForSubscribeErrorDto"]
            | components["schemas"]["ManageLicenseCodesErrorDto"];
        };
      };
      default: {
        content: {
          "application/json": components["schemas"]["LicenseCode"][];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ManageLicenseCodesDto"];
      };
    };
  };
  LicenseCodeController_getLicenseCodeHealth: {
    parameters: {};
    responses: {
      /** If license code not found */
      404: {
        content: {
          "application/json": components["schemas"]["NotFoundLicenseCode"];
        };
      };
      default: {
        content: {
          "application/json": components["schemas"]["CodeHealthDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ActivateLicenseCodeBodyDto"];
      };
    };
  };
  ProductsController_getProducts: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["ProductResponseDto"][];
        };
      };
    };
  };
  UsersController_signIn: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["AuthResponseDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignInDto"];
      };
    };
  };
  UsersController_signUp: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["SignUpResponseDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SignUpDto"];
      };
    };
  };
  UsersController_updatePersonalData: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["UserResponseDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ChangePersonalDataDto"];
      };
    };
  };
  UsersController_updatePassword: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["UserResponseDto"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePasswordDto"];
      };
    };
  };
  UsersController_getMe: {
    parameters: {};
    responses: {
      default: {
        content: {
          "application/json": components["schemas"]["UserResponseDto"];
        };
      };
    };
  };
}

export interface external {}
